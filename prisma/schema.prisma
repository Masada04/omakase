// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String         @map("first_name")
  lastName     String         @map("last_name")
  username     String
  password     String
  phone        String
  email        String?
  Reservation  Reservation[]
  Notification Notification[]
}

model Admin {
  id                        Int            @id @default(autoincrement())
  viewreservations          String
  manageavailability        String
  confirmCancelReservations String
  Reservation               Reservation[]
  Notification              Notification[]
}

model Reservation {
  id                   Int      @id @default(autoincrement())
  menu                 String
  selectDateTime       DateTime
  selectNumberOfGuests String
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId               Int      @map("user_id")
  admin                Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adminId              Int      @map("admin_id")
  table                Table    @relation(fields: [tableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tableId              Int      @map("table_id")
}

model Table {
  id     Int    @id @default(autoincrement())
  number String
  status String
  Reservation Reservation[]
}

model Notification {
  id                            Int    @id @default(autoincrement())
  sendNotification              String
  confirmCancelEmailPhonenumber String
  user                          User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId                        Int    @map("user_id")
  admin                         Admin  @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adminId                       Int    @map("admin_id")
}
